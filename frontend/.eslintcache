[{"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\index.js":"1","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\App.js":"2","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\reportWebVitals.js":"3","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Header.js":"4","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Footer.js":"5","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Product.js":"7","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Rating.js":"8","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\404.js":"10","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\configureStore.js":"11","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\index.js":"12","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\index.js":"13","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\rootState.js":"14","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\productState.js":"15","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\index.js":"16","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\productReducers.js":"17","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\product.js":"18","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\productActions.js":"19","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\productApi.js":"20","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\apiUtils.js":"21","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Loader.js":"22","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\CartScreen.js":"23","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\cart.js":"24","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\cartState.js":"25","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\cartReducers.js":"26","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\cartActions.js":"27","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\LoginScreen.js":"29","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\RegisterScreen.js":"30","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\user.js":"31","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\userState.js":"32","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\userReducers.js":"33","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\userActions.js":"34","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\userApi.js":"35","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ProfileScreen.js":"36","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\CheckoutSteps.js":"37","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\PaymentScreen.js":"38","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\order.js":"39","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"40","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\orderActions.js":"41","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\orderApi.js":"42","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\orderState.js":"43","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\orderReducers.js":"44","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\OrderScreen.js":"45","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\paypalApi.js":"46","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\UserListScreen.js":"47","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\UserEditScreen.js":"48"},{"size":696,"mtime":1612687811824,"results":"49","hashOfConfig":"50"},{"size":1974,"mtime":1616225584791,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1608017218785,"results":"52","hashOfConfig":"50"},{"size":2618,"mtime":1615969041345,"results":"53","hashOfConfig":"50"},{"size":339,"mtime":1610870454846,"results":"54","hashOfConfig":"50"},{"size":957,"mtime":1612424891862,"results":"55","hashOfConfig":"50"},{"size":616,"mtime":1611212641263,"results":"56","hashOfConfig":"50"},{"size":691,"mtime":1611060393435,"results":"57","hashOfConfig":"50"},{"size":5277,"mtime":1613047333929,"results":"58","hashOfConfig":"50"},{"size":122,"mtime":1611043426359,"results":"59","hashOfConfig":"50"},{"size":470,"mtime":1612687855342,"results":"60","hashOfConfig":"50"},{"size":1127,"mtime":1616226979871,"results":"61","hashOfConfig":"50"},{"size":233,"mtime":1614243318738,"results":"62","hashOfConfig":"50"},{"size":1299,"mtime":1614241243371,"results":"63","hashOfConfig":"50"},{"size":703,"mtime":1612255460661,"results":"64","hashOfConfig":"50"},{"size":188,"mtime":1614242160849,"results":"65","hashOfConfig":"50"},{"size":4175,"mtime":1612687326350,"results":"66","hashOfConfig":"50"},{"size":1550,"mtime":1612251092285,"results":"67","hashOfConfig":"50"},{"size":1273,"mtime":1612425347010,"results":"68","hashOfConfig":"50"},{"size":321,"mtime":1612425255151,"results":"69","hashOfConfig":"50"},{"size":258,"mtime":1612257285005,"results":"70","hashOfConfig":"50"},{"size":248,"mtime":1612424558074,"results":"71","hashOfConfig":"50"},{"size":4114,"mtime":1614495528907,"results":"72","hashOfConfig":"50"},{"size":291,"mtime":1612680791066,"results":"73","hashOfConfig":"50"},{"size":61,"mtime":1612680917259,"results":"74","hashOfConfig":"50"},{"size":1304,"mtime":1612687335794,"results":"75","hashOfConfig":"50"},{"size":1742,"mtime":1614241107711,"results":"76","hashOfConfig":"50"},{"size":2818,"mtime":1614239453804,"results":"77","hashOfConfig":"50"},{"size":2225,"mtime":1613637859525,"results":"78","hashOfConfig":"50"},{"size":3164,"mtime":1613894325082,"results":"79","hashOfConfig":"50"},{"size":1534,"mtime":1613631320306,"results":"80","hashOfConfig":"50"},{"size":659,"mtime":1616229537088,"results":"81","hashOfConfig":"50"},{"size":4046,"mtime":1616227424340,"results":"82","hashOfConfig":"50"},{"size":6584,"mtime":1616227515230,"results":"83","hashOfConfig":"50"},{"size":1394,"mtime":1616227538170,"results":"84","hashOfConfig":"50"},{"size":8775,"mtime":1615797970883,"results":"85","hashOfConfig":"50"},{"size":1281,"mtime":1614240152159,"results":"86","hashOfConfig":"50"},{"size":2290,"mtime":1614241636302,"results":"87","hashOfConfig":"50"},{"size":1286,"mtime":1614242721981,"results":"88","hashOfConfig":"50"},{"size":6296,"mtime":1615191689610,"results":"89","hashOfConfig":"50"},{"size":3373,"mtime":1615373726607,"results":"90","hashOfConfig":"50"},{"size":978,"mtime":1615799210952,"results":"91","hashOfConfig":"50"},{"size":336,"mtime":1615190231906,"results":"92","hashOfConfig":"50"},{"size":3613,"mtime":1615361227783,"results":"93","hashOfConfig":"50"},{"size":7703,"mtime":1615368578505,"results":"94","hashOfConfig":"50"},{"size":234,"mtime":1615364858273,"results":"95","hashOfConfig":"50"},{"size":5062,"mtime":1616224404595,"results":"96","hashOfConfig":"50"},{"size":3384,"mtime":1616230864062,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"13dt0mx",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\index.js",[],["200","201"],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\App.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\reportWebVitals.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Header.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Footer.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Product.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Rating.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\404.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\configureStore.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\index.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\rootState.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\productState.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\index.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\productReducers.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\product.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\productActions.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\productApi.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\apiUtils.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\Loader.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\cart.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\cartState.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\cartActions.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ShippingScreen.js",["202","203"],"import React, { useState } from \"react\";\r\nimport { Grid, Header, Form, Message, Button } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { saveShippingAddress } from \"../redux/actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n\r\n  const [data, setData] = useState({\r\n    address: shippingAddress.address,\r\n    city: shippingAddress.city,\r\n    postalCode: shippingAddress.postalCode,\r\n    country: shippingAddress.country,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress(data));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  const onChange = (e, { value }) =>\r\n    setData((state) => ({ ...state, [e.target.name]: value }));\r\n\r\n  return (\r\n    <>\r\n      <Grid style={{ marginTop: 2 }} centered>\r\n        <Grid.Column style={{ maxWidth: 690 }}>\r\n          <CheckoutSteps step1 step2 />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n      <Grid style={{ height: \"80vh\" }} verticalAlign=\"middle\" centered>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          {/* Header */}\r\n          <Header as=\"h1\" color=\"black\" textAlign=\"center\">\r\n            Shipping\r\n          </Header>\r\n\r\n          <Form\r\n            onSubmit={submitHandler}\r\n            loading={loading}\r\n            // success={error && error.length === 0}\r\n            // error={error && error.length !== 0}\r\n          >\r\n            {/* {error && <Message error header=\"Connexion\" content={error} />} */}\r\n\r\n            {/* Address */}\r\n            <Form.Input\r\n              value={data.address}\r\n              label=\"address\"\r\n              name=\"address\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n\r\n            {/* City */}\r\n            <Form.Input\r\n              value={data.city}\r\n              label=\"city\"\r\n              name=\"city\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n\r\n            {/* Postal Code */}\r\n            <Form.Input\r\n              value={data.postalCode}\r\n              label=\"Postal Code\"\r\n              name=\"postalCode\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n\r\n            {/* Country */}\r\n            <Form.Input\r\n              value={data.country}\r\n              label=\"Country\"\r\n              name=\"country\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n\r\n            <Button type=\"submit\" color=\"black\">\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\user.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\userState.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\userReducers.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\userApi.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\ProfileScreen.js",["204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Table,\r\n  Menu,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { userActionsTypes } from \"../redux/actions/actionsTypes\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../redux/actions/userActions\";\r\nimport { listMyOrders } from \"../redux/actions/orderActions\";\r\n\r\nconst ProfileScreen = ({ match, location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(5);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const {\r\n    loading: loadUpdate,\r\n    userInfo: userInfoUpdate,\r\n    error: errUpdate,\r\n    success,\r\n  } = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    loading: loadOrders,\r\n    error: errOrders,\r\n    orders: ordersData,\r\n  } = useSelector((state) => state.orderListMy);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: userActionsTypes.USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listMyOrders(page, limit));\r\n  }, [dispatch, page, limit]);\r\n\r\n  useEffect(() => {\r\n    if (match.params.page) {\r\n      if (match.params.page > 0) {\r\n        setPage(parseInt(match.params.page));\r\n      } else {\r\n        history.push(`/profile/${match.params.page * -1}`);\r\n      }\r\n    }\r\n  }, [match.params.page, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      let userUpdate = { name, email };\r\n      if (password !== \"\") {\r\n        userUpdate.password = password;\r\n      }\r\n      dispatch(updateUserProfile(userUpdate));\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    let p = (page + 1) % ordersData.pages;\r\n    setPage(p);\r\n    history.push(`/profile/${p}`);\r\n  };\r\n\r\n  const prevPage = () => {\r\n    let p = (page - 1) % ordersData.pages;\r\n    setPage(p);\r\n    history.push(`/profile/${p}`);\r\n  };\r\n\r\n  return (\r\n    <Grid style={{ height: \"80vh\" }} verticalAlign=\"middle\" centered>\r\n      {/* Profile */}\r\n      <Grid.Column mobile={16} tablet={8} computer={6} largeScreen={8}>\r\n        <Header as=\"h2\" color=\"black\" textAlign=\"center\">\r\n          User Profile\r\n        </Header>\r\n\r\n        <Form\r\n          onSubmit={submitHandler}\r\n          loading={loading}\r\n          success={\r\n            (error && error.length !== 0) ||\r\n            (message && message === \"\") ||\r\n            success\r\n          }\r\n          error={\r\n            (error && error.length !== 0) ||\r\n            (message && message !== \"\") ||\r\n            (errUpdate && errUpdate !== \"\")\r\n          }\r\n        >\r\n          {message && <Message error header=\"Password\" content={message} />}\r\n          {success && (\r\n            <Message\r\n              positive\r\n              header=\"Update Profile\"\r\n              content=\"Profile Updated\"\r\n            />\r\n          )}\r\n          {error && <Message error header=\"Connexion\" content={error} />}\r\n          {errUpdate && <Message error header=\"Update\" content={errUpdate} />}\r\n\r\n          {/* Name */}\r\n          <Form.Input\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e, { value }) => setName(value)}\r\n            required\r\n          />\r\n\r\n          {/* Email */}\r\n          <Form.Input\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e, { value }) => setEmail(value)}\r\n            required\r\n          />\r\n\r\n          {/* Password */}\r\n          <Form.Input\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e, { value }) => setPassword(value)}\r\n          />\r\n\r\n          {/* Password Confirmation */}\r\n          <Form.Input\r\n            name=\"passwordConfirmation\"\r\n            label=\"Password Confirmation\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e, { value }) => setConfirmPassword(value)}\r\n          />\r\n\r\n          <Button type=\"submit\" color=\"black\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Grid.Column>\r\n\r\n      {/* Orders */}\r\n      <Grid.Column mobile={16} tablet={8} computer={10} largeScreen={8}>\r\n        <Header as=\"h1\" color=\"black\" textAlign=\"center\">\r\n          My Orders\r\n        </Header>\r\n        {errOrders ? (\r\n          <Message negative content={errOrders} />\r\n        ) : (\r\n          <Table loading={loadOrders ? \"true\" : \"false\"} size=\"small\" celled>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>DATE</Table.HeaderCell>\r\n                <Table.HeaderCell>TOTAL</Table.HeaderCell>\r\n                <Table.HeaderCell>PAID</Table.HeaderCell>\r\n                <Table.HeaderCell>DELIVERED</Table.HeaderCell>\r\n                <Table.HeaderCell>ACTIONS</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {ordersData &&\r\n                ordersData.orders &&\r\n                ordersData.orders.map((order, index) => (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{order._id}</Table.Cell>\r\n                    <Table.Cell>{order.createdAt.substring(0, 10)}</Table.Cell>\r\n                    <Table.Cell>{order.totalPrice}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Button\r\n                        as={Link}\r\n                        to={`/order/${order._id}`}\r\n                        size=\"small\"\r\n                        content=\"Details\"\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n            </Table.Body>\r\n\r\n            <Table.Footer>\r\n              <Table.Row>\r\n                <Table.HeaderCell colSpan=\"6\">\r\n                  <Menu floated=\"right\" pagination>\r\n                    {ordersData && ordersData.pages > 1 && (\r\n                      <Menu.Item as=\"a\" onClick={prevPage} icon>\r\n                        <Icon name=\"chevron left\" />\r\n                      </Menu.Item>\r\n                    )}\r\n\r\n                    {ordersData &&\r\n                      ordersData.pages &&\r\n                      Array.from(Array(ordersData.pages).keys()).map((p) => (\r\n                        <Menu.Item\r\n                          active={p + 1 === page}\r\n                          as={Link}\r\n                          to={`/profile/${p + 1}`}\r\n                          key={p}\r\n                        >\r\n                          {p + 1}\r\n                        </Menu.Item>\r\n                      ))}\r\n\r\n                    {ordersData && ordersData.pages > 1 && (\r\n                      <Menu.Item as=\"a\" onClick={nextPage} icon>\r\n                        <Icon name=\"chevron right\" />\r\n                      </Menu.Item>\r\n                    )}\r\n                  </Menu>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Footer>\r\n          </Table>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\PaymentScreen.js",["207"],"import React, { useState } from \"react\";\r\nimport { Grid, Header, Form, Button, Checkbox } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { savePaymentMethod } from \"../redux/actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const { shippingAddress } = useSelector((state) => state.cart);\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid style={{ marginTop: 2 }} centered>\r\n        <Grid.Column style={{ maxWidth: 690 }}>\r\n          <CheckoutSteps step1 step2 step3 />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n      <Grid style={{ height: \"80vh\" }} verticalAlign=\"middle\" centered>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          {/* Header */}\r\n          <Header as=\"h1\" color=\"black\" textAlign=\"center\">\r\n            Payment Method\r\n          </Header>\r\n\r\n          <Form onSubmit={submitHandler} loading={loading}>\r\n            {/* PayPal */}\r\n            <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label=\"PayPal or Credit Card\"\r\n                name=\"paymentMethod\"\r\n                value=\"PayPal\"\r\n                checked={paymentMethod === \"PayPal\"}\r\n                onChange={(e, { value }) => setPaymentMethod(value)}\r\n              />\r\n            </Form.Field>\r\n\r\n            {/* Stripe */}\r\n            {/* <Form.Field>\r\n              <Checkbox\r\n                radio\r\n                label=\"Stripe\"\r\n                name=\"paymentMethod\"\r\n                value=\"Stripe\"\r\n                checked={paymentMethod === \"Stripe\"}\r\n                onChange={(e, { value }) => setPaymentMethod(value)}\r\n              />\r\n            </Form.Field> */}\r\n\r\n            <Button type=\"submit\" color=\"black\">\r\n              Continue\r\n            </Button>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\actionsTypes\\order.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js",["208","209"],"import React, { useEffect } from \"react\";\r\nimport { Button, Grid, Item, Message, Segment } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { createOrder } from \"../redux/actions/orderActions\";\r\nimport {\r\n  orderActionsTypes,\r\n  userActionsTypes,\r\n} from \"../redux/actions/actionsTypes\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n  const dispatch = useDispatch();\r\n\r\n  const { order, success, error, loading } = useSelector(\r\n    (state) => state.orderCreate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      // dispatch({ type: userActionsTypes.USER_DETAILS_RESET });\r\n      // dispatch({ type: orderActionsTypes.ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid style={{ marginTop: 2 }} centered>\r\n        <Grid.Row>\r\n          <Grid.Column style={{ maxWidth: 690 }}>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n\r\n        <Grid.Row>\r\n          {/* Details */}\r\n          <Grid.Column computer={10}>\r\n            <Item.Group divided>\r\n              {/* Shipping Info */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Shipping</Item.Header>\r\n                  <Item.Description>\r\n                    <strong>Address: </strong>\r\n                    {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                    {cart.shippingAddress.postalCode},{\" \"}\r\n                    {cart.shippingAddress.country}\r\n                  </Item.Description>\r\n                </Item.Content>\r\n              </Item>\r\n\r\n              {/* Payment Method */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Payment Method</Item.Header>\r\n                  <Item.Description>\r\n                    <strong>Method: </strong>\r\n                    {cart.paymentMethod}\r\n                  </Item.Description>\r\n                </Item.Content>\r\n              </Item>\r\n\r\n              {/* Order Items */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Order Items</Item.Header>\r\n                  {cart.cartItems.length === 0 ? (\r\n                    <Message info>Your cart is empty</Message>\r\n                  ) : (\r\n                    <Item.Group divided>\r\n                      {cart.cartItems.map((item) => (\r\n                        <Item\r\n                          key={item.product}\r\n                          as={Link}\r\n                          to={`/product/${item.product}`}\r\n                        >\r\n                          <Item.Image size=\"tiny\" src={item.image} rounded />\r\n\r\n                          <Item.Content>\r\n                            {/* Name Product */}\r\n                            <Item.Header>{item.name}</Item.Header>\r\n\r\n                            {/* Price Product */}\r\n                            <Item.Meta>\r\n                              <span className=\"price\">\r\n                                {item.qty} x ${item.price} = $\r\n                                {item.qty * item.price}\r\n                              </span>\r\n                            </Item.Meta>\r\n                          </Item.Content>\r\n                        </Item>\r\n                      ))}\r\n                    </Item.Group>\r\n                  )}\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Grid.Column>\r\n\r\n          {/* Order Summary */}\r\n          <Grid.Column computer={6}>\r\n            <Segment>\r\n              <Item.Group divided>\r\n                {/* Order Summary */}\r\n                <Item header=\"Order Summary\" as=\"h2\" />\r\n\r\n                {/* Items */}\r\n                <Item\r\n                  header=\"Items:\"\r\n                  content={<span> ${cart.itemsPrice}</span>}\r\n                />\r\n\r\n                {/* Shipping */}\r\n                <Item\r\n                  header=\"Shipping:\"\r\n                  content={<span> ${cart.shippingPrice}</span>}\r\n                />\r\n\r\n                {/* Tax */}\r\n                <Item header=\"Tax:\" content={<span> ${cart.taxPrice}</span>} />\r\n\r\n                {/* Total */}\r\n                <Item\r\n                  header=\"Total:\"\r\n                  content={<span> ${cart.totalPrice}</span>}\r\n                />\r\n\r\n                {error && (\r\n                  <Item content={<Message negative content={error} />} />\r\n                )}\r\n\r\n                <Item\r\n                  extra={\r\n                    <Button\r\n                      disabled={cart.cartItems === 0}\r\n                      onClick={placeOrderHandler}\r\n                      loading={loading}\r\n                      secondary\r\n                    >\r\n                      Place Order\r\n                    </Button>\r\n                  }\r\n                />\r\n              </Item.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\actions\\orderActions.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\orderApi.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\initialeState\\orderState.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\OrderScreen.js",["210"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Item, Message, Segment, Loader } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport { getClientIdPayPal } from \"../api/paypalApi\";\r\nimport { getOrderDetails, payOrder } from \"../redux/actions/orderActions\";\r\nimport { orderActionsTypes } from \"../redux/actions/actionsTypes\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { order, loading, error } = useSelector((state) => state.orderDetails);\r\n  const { loading: loadingPay, success: successPay } = useSelector(\r\n    (state) => state.orderPay\r\n  );\r\n  const {\r\n    userInfo: { token },\r\n  } = useSelector((state) => state.userLogin);\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async (tk) => {\r\n      const { data } = await getClientIdPayPal(tk);\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}&buyer-country=US`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay) {\r\n      dispatch({ type: orderActionsTypes.ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript(token);\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, token, order, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  // load Content\r\n  if (loading) {\r\n    return <Loader>Loading...</Loader>;\r\n  }\r\n\r\n  // If exist Error\r\n  if (error) {\r\n    return (\r\n      <Message negative>\r\n        <Message.Header>Error</Message.Header>\r\n        <p>{error}</p>\r\n      </Message>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Grid style={{ marginTop: 2 }} centered>\r\n        <Grid.Row>\r\n          {/* Details */}\r\n          <Grid.Column computer={10}>\r\n            <Item.Group divided>\r\n              {/* Shipping Info */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Shipping</Item.Header>\r\n                  <Item.Description>\r\n                    <p>\r\n                      <strong>Name: </strong>\r\n                      {order.user.name}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Email: </strong>\r\n                      <a href={`mailto:${order.user.email}`}>\r\n                        {order.user.email}\r\n                      </a>\r\n                    </p>\r\n                    <p>\r\n                      <strong>Address: </strong>\r\n                      {order.shippingAddress.address},{\" \"}\r\n                      {order.shippingAddress.city}{\" \"}\r\n                      {order.shippingAddress.postalCode},{\" \"}\r\n                      {order.shippingAddress.country}\r\n                    </p>\r\n                    {order.isDelivered ? (\r\n                      <Message\r\n                        positive\r\n                        content={`Delivered on ${order.deliveredAt}`}\r\n                      />\r\n                    ) : (\r\n                      <Message negative content=\"Not Delivered\" />\r\n                    )}\r\n                  </Item.Description>\r\n                </Item.Content>\r\n              </Item>\r\n\r\n              {/* Payment Method */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Payment Method</Item.Header>\r\n                  <Item.Description>\r\n                    <p>\r\n                      <strong>Method: </strong>\r\n                      {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid ? (\r\n                      <Message positive content={`Paid on ${order.paidAt}`} />\r\n                    ) : (\r\n                      <Message negative content=\"Not Paid\" />\r\n                    )}\r\n                  </Item.Description>\r\n                </Item.Content>\r\n              </Item>\r\n\r\n              {/* Order Items */}\r\n              <Item>\r\n                <Item.Content>\r\n                  <Item.Header as=\"h2\">Order Items</Item.Header>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message info>Your cart is empty</Message>\r\n                  ) : (\r\n                    <Item.Group divided>\r\n                      {order.orderItems.map((item) => (\r\n                        <Item\r\n                          key={item.product}\r\n                          as={Link}\r\n                          to={`/product/${item.product}`}\r\n                        >\r\n                          <Item.Image size=\"tiny\" src={item.image} rounded />\r\n\r\n                          <Item.Content>\r\n                            {/* Name Product */}\r\n                            <Item.Header>{item.name}</Item.Header>\r\n\r\n                            {/* Price Product */}\r\n                            <Item.Meta>\r\n                              <span className=\"price\">\r\n                                {item.qty} x ${item.price} = $\r\n                                {item.qty * item.price}\r\n                              </span>\r\n                            </Item.Meta>\r\n                          </Item.Content>\r\n                        </Item>\r\n                      ))}\r\n                    </Item.Group>\r\n                  )}\r\n                </Item.Content>\r\n              </Item>\r\n            </Item.Group>\r\n          </Grid.Column>\r\n\r\n          {/* Order Summary */}\r\n          <Grid.Column computer={6}>\r\n            <Segment>\r\n              <Item.Group divided>\r\n                {/* Order Summary */}\r\n                <Item header=\"Order Summary\" as=\"h2\" />\r\n\r\n                {/* Items */}\r\n                <Item\r\n                  header=\"Items:\"\r\n                  content={<span> ${order.itemsPrice}</span>}\r\n                />\r\n\r\n                {/* Shipping */}\r\n                <Item\r\n                  header=\"Shipping:\"\r\n                  content={<span> ${order.shippingPrice}</span>}\r\n                />\r\n\r\n                {/* Tax */}\r\n                <Item header=\"Tax:\" content={<span> ${order.taxPrice}</span>} />\r\n\r\n                {/* Total */}\r\n                <Item\r\n                  header=\"Total:\"\r\n                  content={<span> ${order.totalPrice}</span>}\r\n                />\r\n\r\n                {/* PayPal */}\r\n                {!order.isPaid && (\r\n                  <Item>\r\n                    <Item.Content>\r\n                      {!sdkReady ? (\r\n                        <Loader size=\"small\" content=\"Loading...\" />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      )}\r\n                    </Item.Content>\r\n                  </Item>\r\n                )}\r\n              </Item.Group>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\api\\paypalApi.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\laragon\\www\\Labs Work\\ReactJS\\ProShop\\frontend\\src\\screens\\UserEditScreen.js",["211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":2,"column":30,"nodeType":"218","messageId":"219","endLine":2,"endColumn":37},{"ruleId":"216","severity":1,"message":"220","line":17,"column":19,"nodeType":"218","messageId":"219","endLine":17,"endColumn":29},{"ruleId":"216","severity":1,"message":"221","line":30,"column":17,"nodeType":"218","messageId":"219","endLine":30,"endColumn":25},{"ruleId":"216","severity":1,"message":"222","line":39,"column":14,"nodeType":"218","messageId":"219","endLine":39,"endColumn":24},{"ruleId":"216","severity":1,"message":"223","line":40,"column":15,"nodeType":"218","messageId":"219","endLine":40,"endColumn":29},{"ruleId":"216","severity":1,"message":"220","line":16,"column":19,"nodeType":"218","messageId":"219","endLine":16,"endColumn":29},{"ruleId":"216","severity":1,"message":"224","line":8,"column":3,"nodeType":"218","messageId":"219","endLine":8,"endColumn":20},{"ruleId":"216","severity":1,"message":"225","line":9,"column":3,"nodeType":"218","messageId":"219","endLine":9,"endColumn":19},{"ruleId":"216","severity":1,"message":"226","line":19,"column":20,"nodeType":"218","messageId":"219","endLine":19,"endColumn":30},{"ruleId":"216","severity":1,"message":"227","line":19,"column":43,"nodeType":"218","messageId":"219","endLine":19,"endColumn":50},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'loadUpdate' is assigned a value but never used.","'userInfoUpdate' is assigned a value but never used.","'orderActionsTypes' is defined but never used.","'userActionsTypes' is defined but never used.","'loadingPay' is assigned a value but never used.","'errUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]